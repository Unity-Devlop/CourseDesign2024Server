syntax = "proto3";

option go_package = "./;proto";

package proto;

// 错误码
enum StatusCode{
  OK = 0;
  ERROR = 1;
}

message ErrorMessage{
  StatusCode code = 1;
  string content = 2;
}

message UserInfo{
  string Uid = 1;
  string Name = 2;
}

message FriendShipList{
  ErrorMessage error = 1;
  repeated UserInfo list = 2;
}

message FriendListRequest{
  string uid = 1;
}

message DeleteFriendRequest{
  string senderUid = 1;
  string targetUid = 2;
}

message AddFriendRequest{
  string senderUid = 1;
  string targetUid = 2;
}

message SearchFriendRequest{
  string searcherUid = 1;
  string targetUid = 2;
}

message SearchFriendResponse{
  ErrorMessage error = 1;
  string targetUid = 2;
  string targetName = 3;
  bool isFriend = 4;
}

message RegisterRequest{
  string uid = 1;
  string name = 2;
}

message GetUidRequest{

}

message UidResponse{
  ErrorMessage error = 1;
  string uid = 2;
}


//message PlayerData{
//  string uid = 1;
//  string name = 2;
//  Vector3 position = 3;
//
//}
//
//message Vector3{
//  float x = 1;
//  float y = 2;
//  float z = 3;
//}

message StringMessage{
  string content = 1;
}

message TeamInfo{
  string Owner = 1;
  string Id = 2;
  string Name = 3;
  string Color = 4;//队伍颜色 HexString
  repeated UserInfo members = 5;
}
message TeamListRequest{
}

message TeamListResponse{
  ErrorMessage error = 1;
  repeated TeamInfo list = 2;
}

message JoinTeamRequest{
  string sender = 1;
  string teamId = 2;
}

message CreateTeamRequest{
  string senderUid = 1;
  string teamId = 2;
  string teamName = 3;
  string teamColor = 4;
}

message DeleteTeamRequest{
  string sender = 1;
  string teamId = 2;
}

message LeaveTeamRequest{
  string sender = 1;
  string teamId = 2;
}


service GameService
{
  rpc GetUid(GetUidRequest) returns (UidResponse);//获取一个uid
  rpc ContainsUser(StringMessage) returns (ErrorMessage);
  rpc RegisterUser(RegisterRequest) returns (ErrorMessage);
  rpc GetFriendList(FriendListRequest) returns (FriendShipList);
  rpc AddFriend(AddFriendRequest) returns (ErrorMessage);
  rpc DeleteFriend(DeleteFriendRequest) returns (ErrorMessage);
  rpc SearchFriend(SearchFriendRequest) returns (SearchFriendResponse);

  rpc GetTeamList(TeamListRequest) returns (TeamListResponse);
  rpc JoinTeam(JoinTeamRequest) returns (ErrorMessage);
  rpc CreateTeam(CreateTeamRequest) returns (ErrorMessage);
  rpc DeleteTeam(DeleteTeamRequest) returns (ErrorMessage);
  rpc LeaveTeam(LeaveTeamRequest) returns (ErrorMessage);
}